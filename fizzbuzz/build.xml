<project name="fizzbuzz" default="dist" basedir=".">
    <description>
        ANT based build example for building fizzbuzz sample with GhostWriter support
    </description>
    <!-- set global properties for this build -->
    <property name="src" location="src" />
    <property name="build" location="build" />
    <property name="dist"  location="dist" />
    <property name="application.name" value="fizzbuzz" />
    <property name="application.jar" value="${application.name}.jar" />

    <!-- GhostWriter libraries used by the example. You could use Ivy to fetch these, for simplicity reasons we store it besides the project -->
    <property name="ghostwriter.api" location="lib/ghostwriter-api-java-0.1.1.jar" />
    <property name="ghostwriter.jdk.v7" location="lib/ghostwriter-openjdk-v7-0.1.1.jar" />
    <property name="ghostwriter.rt.tracer" location="lib/ghostwriter-rt-tracer-0.1.1.jar" />
    <!-- 3rd party dependencies for the example -->
    <property name="slf4j.api" location="lib/slf4j-api-1.7.13.jar" />
    <property name="slf4j.simple" location="lib/slf4j-simple-1.7.13.jar" />

    <!-- Property containing the fully qualified name of the compile time annotation processor class -->
    <property name="ghostwriter.annotation.processor" value="io.ghostwriter.openjdk.v7.GhostWriterAnnotationProcessor" />

    <!-- Classpath containing the build time dependencies of GhostWriter -->
    <path id="classpath.compile">
        <pathelement path="${ghostwriter.api}" />
        <pathelement path="${ghostwriter.jdk.v7}" />
        <pathelement path="${slf4j.api}" />
    </path>

    <!-- Classpath containing the runtime dependencies of GhostWriter. This contains a runtime implementation that we use in the example -->
    <path id="classpath.runtime">
        <pathelement path="${ghostwriter.rt.tracer}" />
        <pathelement path="${slf4j.simple}" />
    </path>

    <target name="init">
        <mkdir dir="${build}"/>
    </target>

    <target name="compile" depends="init" description="Compile the sources" >
        <javac srcdir="${src}" destdir="${build}">
            <classpath refid="classpath.compile" /> <!-- Specify the classpath that contains the preprocessor of GhostWriter -->
            <compilerarg line="-processor ${ghostwriter.annotation.processor}" />
        </javac>
    </target>

    <target name="dist" depends="compile" description="Generate the distribution" >
        <mkdir dir="${dist}"/>

        <manifestclasspath property="jar.runtime.classpath" jarfile="${dist}/${application.jar}">
            <classpath refid="classpath.runtime"/>
        </manifestclasspath>

        <jar jarfile="${dist}/${application.jar}" basedir="${build}">
            <manifest>
                <attribute name="Main-Class" value="io.ghostwriter.sample.fizzbuzz.FizzBuzz"/>
            </manifest>
        </jar>
    </target>

    <target name="run" depends="dist" description="Target for executing the application">
        <java dir="." jar="${dist}/${application.jar}" fork="true">
            <classpath>
                <pathelement path="${ghostwriter.rt.tracer}" />
                <pathelement path="${slf4j.simple}" />
            </classpath>
        </java>
    </target>

    <target name="clean" description="Remove resources generated by the build" >
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>
</project>